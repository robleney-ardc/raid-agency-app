/* tslint:disable */
/* eslint-disable */
/**
 * RAID v2 API
 * This file is where all the endpoint paths are defined, it\'s the \"top level\' of the OpenAPI definition that links all the different files together. The `3.0` in the filename refers to this file being based on OpenAPI 3.0  as opposed to OpenAPI 3.1, which the tooling doesn\'t support yet. The `2.0.0` in the version field refers to the fact that there\'s already  a `1.0.0` used for the legacy RAiD application. Note that swagger ui doesn\'t currently work with our spec,  see https://github.com/swagger-api/swagger-ui/issues/7724 But the spec works fine with openapi-generator tooling. 
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: contact@raid.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AuthzRequestStatus } from './AuthzRequestStatus';
import {
    AuthzRequestStatusFromJSON,
    AuthzRequestStatusFromJSONTyped,
    AuthzRequestStatusToJSON,
} from './AuthzRequestStatus';

/**
 * approve/reject a request, role is not set if rejecting.
 * @export
 * @interface UpdateAuthzRequestStatus
 */
export interface UpdateAuthzRequestStatus {
    /**
     * 
     * @type {number}
     * @memberof UpdateAuthzRequestStatus
     */
    authzRequestId: number;
    /**
     * 
     * @type {AuthzRequestStatus}
     * @memberof UpdateAuthzRequestStatus
     */
    status: AuthzRequestStatus;
    /**
     * role is required if status == APPROVED
     * @type {string}
     * @memberof UpdateAuthzRequestStatus
     */
    role?: string;
}

/**
 * Check if a given object implements the UpdateAuthzRequestStatus interface.
 */
export function instanceOfUpdateAuthzRequestStatus(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "authzRequestId" in value;
    isInstance = isInstance && "status" in value;

    return isInstance;
}

export function UpdateAuthzRequestStatusFromJSON(json: any): UpdateAuthzRequestStatus {
    return UpdateAuthzRequestStatusFromJSONTyped(json, false);
}

export function UpdateAuthzRequestStatusFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateAuthzRequestStatus {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'authzRequestId': json['authzRequestId'],
        'status': AuthzRequestStatusFromJSON(json['status']),
        'role': !exists(json, 'role') ? undefined : json['role'],
    };
}

export function UpdateAuthzRequestStatusToJSON(value?: UpdateAuthzRequestStatus | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'authzRequestId': value.authzRequestId,
        'status': AuthzRequestStatusToJSON(value.status),
        'role': value.role,
    };
}

