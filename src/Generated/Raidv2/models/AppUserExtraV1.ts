/* tslint:disable */
/* eslint-disable */
/**
 * RAID v2 API
 * This file is where all the endpoint paths are defined, it\'s the \"top level\' of the OpenAPI definition that links all the different files together. The `3.0` in the filename refers to this file being based on OpenAPI 3.0  as opposed to OpenAPI 3.1, which the tooling doesn\'t support yet. The `2.0.0` in the version field refers to the fact that there\'s already  a `1.0.0` used for the legacy RAiD application. Note that swagger ui doesn\'t currently work with our spec,  see https://github.com/swagger-api/swagger-ui/issues/7724 But the spec works fine with openapi-generator tooling. 
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: contact@raid.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AppUser } from './AppUser';
import {
    AppUserFromJSON,
    AppUserFromJSONTyped,
    AppUserToJSON,
} from './AppUser';
import type { AuthzRequestExtraV1 } from './AuthzRequestExtraV1';
import {
    AuthzRequestExtraV1FromJSON,
    AuthzRequestExtraV1FromJSONTyped,
    AuthzRequestExtraV1ToJSON,
} from './AuthzRequestExtraV1';
import type { ServicePoint } from './ServicePoint';
import {
    ServicePointFromJSON,
    ServicePointFromJSONTyped,
    ServicePointToJSON,
} from './ServicePoint';

/**
 * bootstrapped users have no authzRequest or approvingUser
 * @export
 * @interface AppUserExtraV1
 */
export interface AppUserExtraV1 {
    /**
     * 
     * @type {AppUser}
     * @memberof AppUserExtraV1
     */
    appUser: AppUser;
    /**
     * 
     * @type {ServicePoint}
     * @memberof AppUserExtraV1
     */
    servicePoint: ServicePoint;
    /**
     * 
     * @type {AuthzRequestExtraV1}
     * @memberof AppUserExtraV1
     */
    authzRequest?: AuthzRequestExtraV1;
}

/**
 * Check if a given object implements the AppUserExtraV1 interface.
 */
export function instanceOfAppUserExtraV1(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "appUser" in value;
    isInstance = isInstance && "servicePoint" in value;

    return isInstance;
}

export function AppUserExtraV1FromJSON(json: any): AppUserExtraV1 {
    return AppUserExtraV1FromJSONTyped(json, false);
}

export function AppUserExtraV1FromJSONTyped(json: any, ignoreDiscriminator: boolean): AppUserExtraV1 {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'appUser': AppUserFromJSON(json['appUser']),
        'servicePoint': ServicePointFromJSON(json['servicePoint']),
        'authzRequest': !exists(json, 'authzRequest') ? undefined : AuthzRequestExtraV1FromJSON(json['authzRequest']),
    };
}

export function AppUserExtraV1ToJSON(value?: AppUserExtraV1 | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'appUser': AppUserToJSON(value.appUser),
        'servicePoint': ServicePointToJSON(value.servicePoint),
        'authzRequest': AuthzRequestExtraV1ToJSON(value.authzRequest),
    };
}

